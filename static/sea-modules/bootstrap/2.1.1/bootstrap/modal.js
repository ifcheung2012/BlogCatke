// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require, exports) {
    var Alert, Base, Confirm, jQuery;
    jQuery = require('../bootstrap');
    Base = (function() {

      function Base(args) {
        var _this = this;
        if (args == null) {
          args = {
            header: '',
            body: '',
            footer: ''
          };
        }
        this.dom = jQuery("<div class='modal' role='dialog' aria-hidden='true'>    <div class='modal-header'>        <button type='button' class='close'>×</button>        <h3>" + args.header + "</h3>    </div>    <div class='modal-body'>        " + args.body + "    </div>    <div class='modal-footer'>        " + args.footer + "    </div></div>");
        this.dom.find('.close').click(function() {
          return _this.hide();
        });
        this.dom.modal({
          show: false
        });
        this.init();
      }

      Base.prototype.init = function() {
        return false;
      };

      Base.prototype.show = function() {
        return this.dom.modal('show');
      };

      Base.prototype.hide = function() {
        return this.dom.modal('hide');
      };

      Base.prototype.remove = function() {
        this.dom.modal('hide');
        return this.dom.remove();
      };

      return Base;

    })();
    Alert = (function(_super) {

      __extends(Alert, _super);

      function Alert(args) {
        var buttons, content, title, _ref, _ref1, _ref2;
        if (args == null) {
          args = {};
        }
        title = (_ref = args.title) != null ? _ref : '提示信息！';
        content = (_ref1 = args.content) != null ? _ref1 : '';
        buttons = "            <a href='#' class='btn btn-primary confirm-yes'>确认</a>            ";
        this.callback = (_ref2 = args.callback) != null ? _ref2 : function() {};
        Alert.__super__.constructor.call(this, {
          header: title,
          body: content,
          footer: buttons
        });
      }

      Alert.prototype.init = function() {
        var _this = this;
        this.dom.find('.confirm-yes').click(function() {
          _this.remove();
          _this.callback(true);
          return false;
        });
        return this.show();
      };

      Alert.prototype.hide = function() {
        this.callback(false);
        return this.remove();
      };

      return Alert;

    })(Base);
    Confirm = (function(_super) {

      __extends(Confirm, _super);

      function Confirm(args) {
        var buttons, content, title, _ref, _ref1, _ref2;
        if (args == null) {
          args = {};
        }
        title = (_ref = args.title) != null ? _ref : '提示信息！';
        content = (_ref1 = args.content) != null ? _ref1 : '您确认执行此操作？';
        buttons = "            <a href='#' class='btn confirm-no'>取消</a>            <a href='#' class='btn btn-primary confirm-yes'>确认</a>            ";
        this.callback = (_ref2 = args.callback) != null ? _ref2 : function() {};
        Confirm.__super__.constructor.call(this, {
          header: title,
          body: content,
          footer: buttons
        });
      }

      Confirm.prototype.init = function() {
        var _this = this;
        this.dom.find('.confirm-no').click(function() {
          _this.remove();
          _this.callback(false);
          return false;
        });
        return this.dom.find('.confirm-yes').click(function() {
          _this.remove();
          _this.callback(true);
          return false;
        });
      };

      Confirm.prototype.hide = function() {
        this.callback(false);
        return this.remove();
      };

      return Confirm;

    })(Base);
    exports.Base = Base;
    exports.Confirm = Confirm;
    exports.Alert = Alert;
  });

}).call(this);
